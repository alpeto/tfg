__kernel void fragMerging(__write_only image2d_t output,__global float *vertexs, __global float *colorBuff, volatile __global int *depthBuffer, int scr_width)
{
	int currentVertex = get_global_id(0);
	int currentElement = currentVertex * 3;
	int2 position = ((int)vertexs[currentElement], (int)vertexs[currentElement+1]);
	
	barrier(CLK_LOCAL_MEM_FENCE & CLK_GLOBAL_MEM_FENCE);
	
	if(position.x >= 0 && position.y >= 0){
		int z = (int) (vertexs[currentElement+2]);
		int depth_pos = (position.x * scr_width) + position.y;
		int old = atomic_min(&depthBuffer[depth_pos], z);
		if(old > z){
			printf("I am nยบ %i my position is: %i %i %i and I am comparing %i %i \n \n", currentVertex,position.x,position.y, z, old, z);
			float4 color = (float4)(colorBuff[currentElement],colorBuff[currentElement+1],colorBuff[currentElement+2],0);
			write_imagef(output, position, color);
		}
		else{
			printf("I am %i and didn't pass the depth test %i %i  \n", currentVertex,z,old);
		}
	}

	barrier(CLK_LOCAL_MEM_FENCE & CLK_GLOBAL_MEM_FENCE);
}
